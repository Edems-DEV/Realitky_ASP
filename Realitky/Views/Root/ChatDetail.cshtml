@using Realitky.Models.Entity
@{
    Request_user thread = ViewBag.Thread;
    User user = ViewBag.User;
}

<main class="margin" style="display: flex; align-items: center;">
<div class="msger">
  <div class="msger-header">
    <div class="msger-header-title">
      <i class="fas fa-comment-alt"></i> @thread.Offer.title
    </div>
    <div class="msger-header-options">
      <span><i class="fas fa-cog"></i></span>
    </div>
  </div>

  <div id="msger-chat">
    @{
      foreach (Message message in thread.Messages.OrderBy(m => m.sent_at).TakeLast(15))
      {
        string right = user.username == message.Sender.username ? "right" : "left";
        <div class="msg @right-msg">
          <div
            class="msg-img"
            style="background-image: url(/assets/@message.Sender.avatar)">
          </div>

          <div class="msg-bubble">
            <div class="msg-info">
              <div class="msg-info-name">@message.Sender.username</div>
              <div class="msg-info-time">@message.sent_at.ToString("hh:mm")</div>
            </div>

            <div class="msg-text">
              @message.content
            </div>
          </div>
        </div>
      }
    }
  </div>

  <div class="msger-inputarea">
    <input type="text" id="msger-input" placeholder="Enter your message...">
    <button type="button" id="msger-send-btn">Send</button>
  </div>
</div>
</main>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
@* <script src="~/js/chat.js"></script> *@
<script>
    "use strict";
    
    let ThreadId =  @thread.Id;
    let UserId   =  @user.Id;
    let Username = "@user.username";
    
    const msgerChat = document.getElementById("msger-chat");
    function appendMessage(username, avatar, text, date){
      console.log('Append: ' + username);
      let side = "left";
      let xxxxx = "";
      if (username == Username){
          side = "rigth";
          xxxxx = 'style="flex-direction: row-reverse;"'; //force fix but side is still broken (black text)
      }
      let msgHTML = `
      <div class="msg ${side}-msg" ${xxxxx}>
        <div
         class="msg-img"
         style="background-image: url(/assets/${avatar})"
        ></div>
  
        <div class="msg-bubble">
          <div class="msg-info">
            <div class="msg-info-name">${username}</div>
            <div class="msg-info-time">${date}</div>
          </div>
  
          <div class="msg-text">
            ${text}
          </div>
        </div>
      </div>
      `;
      msgerChat.insertAdjacentHTML("beforeend", msgHTML);
      msgerChat.scrollTop += 500;
    }
    // function formatDate(date) {
    //   const h = "0" + date.getHours();
    //   const m = "0" + date.getMinutes();
    //
    //   return `${h.slice(-2)}:${m.slice(-2)}`;
    // }
    
    //------------------------------------------
    //------------------ JS --------------------
    //------------------------------------------
    
    document.getElementById("msger-send-btn").disabled = true;
    
    document.getElementById("msger-send-btn").addEventListener("click", function (event) {
        event.preventDefault();
        
        const msgerInput = document.getElementById("msger-input");
        const message = msgerInput.value;
        if (!message) return;
        
        SendMessage(message);
        msgerInput.value = "";
    });
    
    //------------------------------------------
    //--------------- SignalR ------------------
    //------------------------------------------
    
    // Connect
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    
    // On connected
    connection.start().then(function () {
        console.log("connected");
        document.getElementById("msger-send-btn").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });
    
    // From server
    connection.on("ReceiveMessage", function (username, avatar, text, date) {
        console.log("message received");
        appendMessage(username, avatar, text, date);
    });
    
    connection.on("ErrorMessage", function (message) {
        console.log("error received");
        appendMessage("Error", "", `!!! ${message} !!!`, "xx:xx");
    });
    
    // Client to server
    
    function SendMessage(message) {
        connection.invoke("SendMessage", ThreadId, UserId, message)
            .catch(function (err) { return console.error(err.toString()); });
    }
    
</script>

<style>    
    .msger {
      display: flex;
      flex-flow: column wrap;
      justify-content: space-between;
      width: 100%;
      max-width: 867px;
      margin: 25px 10px;
      height: calc(100% - 50px);
      border: 2px solid #ddd;
      border-radius: 5px;
      box-shadow: 0 15px 15px -5px rgba(0, 0, 0, 0.2);
    }
    
    .msger-header {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 2px solid #ddd;
      background: #eee;
      color: #666;
    }
    
    #msger-chat {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
    }
    #msger-chat::-webkit-scrollbar {
      width: 6px;
    }
    #msger-chat::-webkit-scrollbar-track {
      background: #ddd;
    }
    #msger-chat::-webkit-scrollbar-thumb {
      background: #bdbdbd;
    }
    .msg {
      display: flex;
      align-items: flex-end;
      margin-bottom: 10px;
    }
    .msg:last-of-type {
      margin: 0;
    }
    .msg-img {
      width: 50px;
      height: 50px;
      margin-right: 10px;
      background: #ddd;
      background-repeat: no-repeat;
      background-position: center;
      background-size: cover;
      border-radius: 50%;
    }
    .msg-bubble {
      max-width: 450px;
      padding: 15px;
      border-radius: 15px;
      background: #579ffb;
    }
    .msg-info {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }
    .msg-info-name {
      margin-right: 10px;
      font-weight: bold;
    }
    .msg-info-time {
      font-size: 0.85em;
    }
    
    .left-msg .msg-bubble {
      border-bottom-left-radius: 0;
    }
    
    .right-msg {
      flex-direction: row-reverse;
    }
    .right-msg .msg-bubble {
      background: #579ffb;
      color: #fff;
      border-bottom-right-radius: 0;
    }
    .right-msg .msg-img {
      margin: 0 0 0 10px;
    }
    
    .msger-inputarea {
      display: flex;
      padding: 10px;
      border-top: 2px solid #ddd;
      background: #eee;
    }
    .msger-inputarea * {
      padding: 10px;
      border: none;
      border-radius: 3px;
      font-size: 1em;
    }
    #msger-input {
      flex: 1;
      background: #ddd;
    }
    #msger-send-btn {
      margin-left: 10px;
      background: #ff8600;
      color: #fff;
      font-weight: bold;
      cursor: pointer;
      transition: background 0.23s;
    }
    #msger-send-btn:hover {
      background: #f27f00;
    }
    
    #msger-chat {
      background-color: #fcfcfe;
    }
</style>