@using Realitky.Models.Entity
@{
    Request_user thread = ViewBag.Thread;
}

@* <h1>@thread.Offer.title</h1>
<div class="card table-responsive px-3">
    <table class="table align-middle">
        <thead>
        <th scope="col">#</th>
        <th scope="col">Název</th>
        </thead>
        <tbody>
        @foreach (Message message in thread.Messages)
        {
            <tr>
                <th scope="row">@message.Id</th>
                <td>@message.content</td>
            </tr>
        }
        </tbody>
    </table>
</div> *@

<div class="container">
    <div>
        <div>User</div>
        <div><input type="text" id="userInput" /></div>
    </div>
    <div>
        <div>Message</div>
        <div><input type="text" id="messageInput" /></div>
    </div>
    <div>
        <input class="btn" type="button" id="sendButton" value="Send Message" />
    </div>
    <hr />
    <div>
        <ul id="messagesList">
            @foreach (Message message in thread.Messages)
            {
                <li>@message.IdSender : @message.content</li>
            }
        </ul>
    </div>
</div>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
@* <script src="~/js/chat.js"></script> *@
<script>
    "use strict";
    
    //------------------------------------------
    //------------------ JS --------------------
    //------------------------------------------
    
    document.getElementById("sendButton").disabled = true;
    
    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        SendMessage(user, message);
        event.preventDefault();
    });
    
    //------------------------------------------
    //--------------- SignalR ------------------
    //------------------------------------------
    
    // Connect
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    
    // On connected
    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });
    
    // From server
    connection.on("ReceiveMessage", function (user, message) {
        var li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        li.textContent = `${user}: ${message}`;
    });
    
    // Client to server
    
    function SendMessage(user, message) {
        connection.invoke("SendMessage", user, message)
            .catch(function (err) { return console.error(err.toString()); });
    }
</script>

<style>
    input {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 6px 12px;
    }
</style>