@using Type = Realitky.Models.Entity.Type
@using Realitky.Models.Entity

<main class="margin">
    <div>
        <select id="f-IsRent">
            <option value="" hidden>Chci</option>
            <option value="">-</option>
            <option value="True">Pronájem</option>
            <option value="False">Prodej</option>
        </select>
        <select id="f-type">
            <option value="" hidden>Typu</option>
            <option value="">-</option>
            @foreach (Type item in ViewBag.Types)
            {
                <option value="@item.Id">@item.name</option>
            }
        </select>
        <select id="f-region">
            <option value="" hidden>v kraji</option>
            <option value="">-</option>
            @foreach (Region item in ViewBag.Regions)
            {
                <option value="@item.Id">@item.name</option>
            }
        </select>
        <div>
            <span>Cena:</span>
            <input type="number" min="0" id="f-price-min" placeholder="0" value="@(ViewBag.MinP != 0 ? ViewBag.MinP : "")">
            <span>-</span>
            <input type="number" min="0" id="f-price-max" placeholder="∞" value="@(ViewBag.MaxP != 0 ? ViewBag.MaxP : "")">
        </div>
        <div>
            <span>Plocha:</span>
            <input type="number" min="0" id="f-size-min" placeholder="0" value="@(ViewBag.MinS != 0 ? ViewBag.MinS : "")">
            <span>-</span>
            <input type="number" min="0" id="f-size-max" placeholder="∞" value="@(ViewBag.MaxS != 0 ? ViewBag.MaxS : "")">
        </div>

        <a id="search-button" class="btn">Search</a>
    </div>
    <div id="offers" style="margin: 10px 20px;">
        @foreach (Offer item in ViewBag.Offers)
        {
            <vc:offer-component offer="@item"></vc:offer-component>
        }
    </div>
    <div>
        @if (ViewBag.Offset > 0)
        {
            <a class="btn" href="@Url.Action("Catalog", "Root", new { offset = ViewBag.Offset - ViewBag.Limit, limit = ViewBag.Limit })">Previous</a>
        }
        
        <a class="btn" href="@Url.Action("Catalog", "Root", new { offset = ViewBag.Offset + ViewBag.Limit, limit = ViewBag.Limit })">Next</a>
    </div>
</main>

<style>
    select {
        padding: 3px;
        border: solid 1px #ccc;
        font-size: 1.3em;
    }
    option {
        font-size: 1.1em;
    }
    input[type="number"] {
        width: 69px;
        padding: 3px;
        border: solid 1px #ccc;
    }
</style>

<script>
     window.onload = function() {
        setSelectedValue('f-IsRent', '@ViewBag.IsRent', null);
        setSelectedValue('f-type', '@ViewBag.Type', null);
        setSelectedValue('f-region', '@ViewBag.Region', null);
        setSelectedValue('f-price-min', '@ViewBag.MinP', null);
        setSelectedValue('f-price-max', '@ViewBag.MaxP', null);
        setSelectedValue('f-size-min', '@ViewBag.MinS', null);
        setSelectedValue('f-size-max', '@ViewBag.MaxS', null);
    };
    function setSelectedValue(selectId, value, def) {
        var select = document.getElementById(selectId);
        if (select && value)
            if (value != def)
                select.value = value;
    }

    document.getElementById('search-button').addEventListener('click', function() {
        var isRent = document.getElementById('f-IsRent').value;
        var type = document.getElementById('f-type').value;
        var region = document.getElementById('f-region').value;
        var minP = document.getElementById('f-price-min').value;
        var maxP = document.getElementById('f-price-max').value;
        var minS = document.getElementById('f-size-min').value;
        var maxS = document.getElementById('f-size-max').value;

        // Construct the URL using MVC routing
        var url = '@Url.Action("Catalog", "Root")';
        if (url.indexOf('?') === -1) url += '?'; // if no querystring
        else url += '&'; // if existing querystring
        if (isRent != "" && isRent != null) url += '&isRent=' + encodeURIComponent(isRent);
        if (type != "" && type != null) url += '&type=' + encodeURIComponent(type);
        if (region != "" && type != null) url += '&region=' + encodeURIComponent(region);
        if (minP != "" && type != null) url += '&minP=' + encodeURIComponent(minP);
        if (maxP != "" && type != null) url += '&maxP=' + encodeURIComponent(maxP);
        if (minS != "" && type != null) url += '&minS=' + encodeURIComponent(minS);
        if (maxS != "" && type != null) url += '&maxS=' + encodeURIComponent(maxS);

        window.location.href = url;
    });
</script>